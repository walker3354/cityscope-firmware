ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.get_NodeID,"ax",%progbits
  20              		.align	1
  21              		.global	get_NodeID
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	get_NodeID:
  27              	.LFB170:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "can.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include"CO_app_STM32.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 2


  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** uint32_t get_NodeID(void);
  56:Core/Src/main.c **** uint32_t NodeID[1];
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 3


  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   MX_CAN_Init();
  93:Core/Src/main.c ****   MX_TIM2_Init();
  94:Core/Src/main.c ****   MX_TIM3_Init();
  95:Core/Src/main.c ****   MX_TIM17_Init();
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  97:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim2);
  98:Core/Src/main.c ****   Flash_Read_Data(0x0800FFFC, NodeID, 1);
  99:Core/Src/main.c ****   HAL_FLASH_Lock();
 100:Core/Src/main.c ****   /* USER CODE END 2 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Init scheduler */
 103:Core/Src/main.c ****   osKernelInitialize();  /* Call init function for freertos objects (in freertos.c) */
 104:Core/Src/main.c ****   MX_FREERTOS_Init();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Start scheduler */
 107:Core/Src/main.c ****   osKernelStart();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 110:Core/Src/main.c ****   /* Infinite loop */
 111:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 112:Core/Src/main.c ****   while (1)
 113:Core/Src/main.c ****   {
 114:Core/Src/main.c ****     /* USER CODE END WHILE */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c ****   /* USER CODE END 3 */
 119:Core/Src/main.c **** }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /**
 122:Core/Src/main.c ****   * @brief System Clock Configuration
 123:Core/Src/main.c ****   * @retval None
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c **** void SystemClock_Config(void)
 126:Core/Src/main.c **** {
 127:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 128:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 131:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 4


 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 160:Core/Src/main.c **** uint32_t get_NodeID(void)
 161:Core/Src/main.c **** {
  29              		.loc 1 161 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 162:Core/Src/main.c ****   return NodeID[0];
  34              		.loc 1 162 3 view .LVU1
 163:Core/Src/main.c **** }
  35              		.loc 1 163 1 is_stmt 0 view .LVU2
  36 0000 014B     		ldr	r3, .L2
  37 0002 1868     		ldr	r0, [r3]
  38 0004 7047     		bx	lr
  39              	.L3:
  40 0006 00BF     		.align	2
  41              	.L2:
  42 0008 00000000 		.word	.LANCHOR0
  43              		.cfi_endproc
  44              	.LFE170:
  46              		.section	.text.delay_us,"ax",%progbits
  47              		.align	1
  48              		.global	delay_us
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	delay_us:
  54              	.LVL0:
  55              	.LFB171:
 164:Core/Src/main.c **** void delay_us(uint16_t us)
 165:Core/Src/main.c **** {
  56              		.loc 1 165 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
 166:Core/Src/main.c ****   __HAL_TIM_SET_COUNTER(&htim2, 0); // set the counter value a 0
  61              		.loc 1 166 3 view .LVU4
  62 0000 034B     		ldr	r3, .L6
  63 0002 1A68     		ldr	r2, [r3]
  64 0004 0023     		movs	r3, #0
  65 0006 5362     		str	r3, [r2, #36]
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 5


 167:Core/Src/main.c ****   while (__HAL_TIM_GET_COUNTER(&htim2) < us)
  66              		.loc 1 167 3 view .LVU5
  67              	.L5:
 168:Core/Src/main.c ****     ; // wait for the counter to reach the us input in the parameter
  68              		.loc 1 168 5 discriminator 1 view .LVU6
 167:Core/Src/main.c ****   while (__HAL_TIM_GET_COUNTER(&htim2) < us)
  69              		.loc 1 167 9 discriminator 1 view .LVU7
 167:Core/Src/main.c ****   while (__HAL_TIM_GET_COUNTER(&htim2) < us)
  70              		.loc 1 167 10 is_stmt 0 discriminator 1 view .LVU8
  71 0008 536A     		ldr	r3, [r2, #36]
 167:Core/Src/main.c ****   while (__HAL_TIM_GET_COUNTER(&htim2) < us)
  72              		.loc 1 167 9 discriminator 1 view .LVU9
  73 000a 8342     		cmp	r3, r0
  74 000c FCD3     		bcc	.L5
 169:Core/Src/main.c **** }
  75              		.loc 1 169 1 view .LVU10
  76 000e 7047     		bx	lr
  77              	.L7:
  78              		.align	2
  79              	.L6:
  80 0010 00000000 		.word	htim2
  81              		.cfi_endproc
  82              	.LFE171:
  84              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  85              		.align	1
  86              		.global	HAL_TIM_PeriodElapsedCallback
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  91              	HAL_TIM_PeriodElapsedCallback:
  92              	.LVL1:
  93              	.LFB172:
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /* USER CODE END 4 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /**
 174:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 175:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 176:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 177:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 178:Core/Src/main.c ****   * @param  htim : TIM handle
 179:Core/Src/main.c ****   * @retval None
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 182:Core/Src/main.c **** {
  94              		.loc 1 182 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		.loc 1 182 1 is_stmt 0 view .LVU12
  99 0000 10B5     		push	{r4, lr}
 100              	.LCFI0:
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 4, -8
 103              		.cfi_offset 14, -4
 104 0002 0446     		mov	r4, r0
 183:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 6


 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 186:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 105              		.loc 1 186 3 is_stmt 1 view .LVU13
 106              		.loc 1 186 11 is_stmt 0 view .LVU14
 107 0004 0268     		ldr	r2, [r0]
 108              		.loc 1 186 6 view .LVU15
 109 0006 074B     		ldr	r3, .L14
 110 0008 9A42     		cmp	r2, r3
 111 000a 05D0     		beq	.L12
 112              	.LVL2:
 113              	.L9:
 187:Core/Src/main.c ****     HAL_IncTick();
 188:Core/Src/main.c ****   }
 189:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 190:Core/Src/main.c ****   if (htim == canopenNodeSTM32->timerHandle)
 114              		.loc 1 190 3 is_stmt 1 view .LVU16
 115              		.loc 1 190 31 is_stmt 0 view .LVU17
 116 000c 064B     		ldr	r3, .L14+4
 117 000e 1B68     		ldr	r3, [r3]
 118 0010 5B68     		ldr	r3, [r3, #4]
 119              		.loc 1 190 6 view .LVU18
 120 0012 A342     		cmp	r3, r4
 121 0014 03D0     		beq	.L13
 122              	.L8:
 191:Core/Src/main.c ****   {
 192:Core/Src/main.c ****     canopen_app_interrupt();
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 195:Core/Src/main.c **** }
 123              		.loc 1 195 1 view .LVU19
 124 0016 10BD     		pop	{r4, pc}
 125              	.LVL3:
 126              	.L12:
 187:Core/Src/main.c ****     HAL_IncTick();
 127              		.loc 1 187 5 is_stmt 1 view .LVU20
 128 0018 FFF7FEFF 		bl	HAL_IncTick
 129              	.LVL4:
 187:Core/Src/main.c ****     HAL_IncTick();
 130              		.loc 1 187 5 is_stmt 0 view .LVU21
 131 001c F6E7     		b	.L9
 132              	.L13:
 192:Core/Src/main.c ****   }
 133              		.loc 1 192 5 is_stmt 1 view .LVU22
 134 001e FFF7FEFF 		bl	canopen_app_interrupt
 135              	.LVL5:
 136              		.loc 1 195 1 is_stmt 0 view .LVU23
 137 0022 F8E7     		b	.L8
 138              	.L15:
 139              		.align	2
 140              	.L14:
 141 0024 002C0140 		.word	1073818624
 142 0028 00000000 		.word	canopenNodeSTM32
 143              		.cfi_endproc
 144              	.LFE172:
 146              		.section	.text.Error_Handler,"ax",%progbits
 147              		.align	1
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 7


 148              		.global	Error_Handler
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 153              	Error_Handler:
 154              	.LFB173:
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** /**
 198:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 199:Core/Src/main.c ****   * @retval None
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c **** void Error_Handler(void)
 202:Core/Src/main.c **** {
 155              		.loc 1 202 1 is_stmt 1 view -0
 156              		.cfi_startproc
 157              		@ Volatile: function does not return.
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 203:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 204:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 205:Core/Src/main.c ****   __disable_irq();
 161              		.loc 1 205 3 view .LVU25
 162              	.LBB4:
 163              	.LBI4:
 164              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 8


  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 9


  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 165              		.loc 2 140 27 view .LVU26
 166              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 167              		.loc 2 142 3 view .LVU27
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 10


 168              		.syntax unified
 169              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 170 0000 72B6     		cpsid i
 171              	@ 0 "" 2
 172              		.thumb
 173              		.syntax unified
 174              	.L17:
 175              	.LBE5:
 176              	.LBE4:
 206:Core/Src/main.c ****   while (1)
 177              		.loc 1 206 3 discriminator 1 view .LVU28
 207:Core/Src/main.c ****   {
 208:Core/Src/main.c ****   }
 178              		.loc 1 208 3 discriminator 1 view .LVU29
 206:Core/Src/main.c ****   while (1)
 179              		.loc 1 206 9 discriminator 1 view .LVU30
 180 0002 FEE7     		b	.L17
 181              		.cfi_endproc
 182              	.LFE173:
 184              		.section	.text.SystemClock_Config,"ax",%progbits
 185              		.align	1
 186              		.global	SystemClock_Config
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 191              	SystemClock_Config:
 192              	.LFB169:
 126:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 193              		.loc 1 126 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 64
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 00B5     		push	{lr}
 198              	.LCFI1:
 199              		.cfi_def_cfa_offset 4
 200              		.cfi_offset 14, -4
 201 0002 91B0     		sub	sp, sp, #68
 202              	.LCFI2:
 203              		.cfi_def_cfa_offset 72
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 204              		.loc 1 127 3 view .LVU32
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 205              		.loc 1 127 22 is_stmt 0 view .LVU33
 206 0004 2822     		movs	r2, #40
 207 0006 0021     		movs	r1, #0
 208 0008 06A8     		add	r0, sp, #24
 209 000a FFF7FEFF 		bl	memset
 210              	.LVL6:
 128:Core/Src/main.c **** 
 211              		.loc 1 128 3 is_stmt 1 view .LVU34
 128:Core/Src/main.c **** 
 212              		.loc 1 128 22 is_stmt 0 view .LVU35
 213 000e 0023     		movs	r3, #0
 214 0010 0193     		str	r3, [sp, #4]
 215 0012 0293     		str	r3, [sp, #8]
 216 0014 0393     		str	r3, [sp, #12]
 217 0016 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 11


 218 0018 0593     		str	r3, [sp, #20]
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 219              		.loc 1 133 3 is_stmt 1 view .LVU36
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 220              		.loc 1 133 36 is_stmt 0 view .LVU37
 221 001a 0223     		movs	r3, #2
 222 001c 0693     		str	r3, [sp, #24]
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 223              		.loc 1 134 3 is_stmt 1 view .LVU38
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 224              		.loc 1 134 30 is_stmt 0 view .LVU39
 225 001e 0122     		movs	r2, #1
 226 0020 0A92     		str	r2, [sp, #40]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 227              		.loc 1 135 3 is_stmt 1 view .LVU40
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 228              		.loc 1 135 41 is_stmt 0 view .LVU41
 229 0022 1022     		movs	r2, #16
 230 0024 0B92     		str	r2, [sp, #44]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 231              		.loc 1 136 3 is_stmt 1 view .LVU42
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 232              		.loc 1 136 34 is_stmt 0 view .LVU43
 233 0026 0D93     		str	r3, [sp, #52]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 234              		.loc 1 137 3 is_stmt 1 view .LVU44
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 235              		.loc 1 138 3 view .LVU45
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 236              		.loc 1 138 32 is_stmt 0 view .LVU46
 237 0028 4FF46013 		mov	r3, #3670016
 238 002c 0F93     		str	r3, [sp, #60]
 139:Core/Src/main.c ****   {
 239              		.loc 1 139 3 is_stmt 1 view .LVU47
 139:Core/Src/main.c ****   {
 240              		.loc 1 139 7 is_stmt 0 view .LVU48
 241 002e 06A8     		add	r0, sp, #24
 242 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 243              	.LVL7:
 139:Core/Src/main.c ****   {
 244              		.loc 1 139 6 view .LVU49
 245 0034 80B9     		cbnz	r0, .L22
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 246              		.loc 1 146 3 is_stmt 1 view .LVU50
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 247              		.loc 1 146 31 is_stmt 0 view .LVU51
 248 0036 0F23     		movs	r3, #15
 249 0038 0193     		str	r3, [sp, #4]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 250              		.loc 1 148 3 is_stmt 1 view .LVU52
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 251              		.loc 1 148 34 is_stmt 0 view .LVU53
 252 003a 0221     		movs	r1, #2
 253 003c 0291     		str	r1, [sp, #8]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 254              		.loc 1 149 3 is_stmt 1 view .LVU54
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 12


 255              		.loc 1 149 35 is_stmt 0 view .LVU55
 256 003e 0023     		movs	r3, #0
 257 0040 0393     		str	r3, [sp, #12]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 258              		.loc 1 150 3 is_stmt 1 view .LVU56
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 259              		.loc 1 150 36 is_stmt 0 view .LVU57
 260 0042 4FF48062 		mov	r2, #1024
 261 0046 0492     		str	r2, [sp, #16]
 151:Core/Src/main.c **** 
 262              		.loc 1 151 3 is_stmt 1 view .LVU58
 151:Core/Src/main.c **** 
 263              		.loc 1 151 36 is_stmt 0 view .LVU59
 264 0048 0593     		str	r3, [sp, #20]
 153:Core/Src/main.c ****   {
 265              		.loc 1 153 3 is_stmt 1 view .LVU60
 153:Core/Src/main.c ****   {
 266              		.loc 1 153 7 is_stmt 0 view .LVU61
 267 004a 01A8     		add	r0, sp, #4
 268 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 269              	.LVL8:
 153:Core/Src/main.c ****   {
 270              		.loc 1 153 6 view .LVU62
 271 0050 20B9     		cbnz	r0, .L23
 157:Core/Src/main.c **** 
 272              		.loc 1 157 1 view .LVU63
 273 0052 11B0     		add	sp, sp, #68
 274              	.LCFI3:
 275              		.cfi_remember_state
 276              		.cfi_def_cfa_offset 4
 277              		@ sp needed
 278 0054 5DF804FB 		ldr	pc, [sp], #4
 279              	.L22:
 280              	.LCFI4:
 281              		.cfi_restore_state
 141:Core/Src/main.c ****   }
 282              		.loc 1 141 5 is_stmt 1 view .LVU64
 283 0058 FFF7FEFF 		bl	Error_Handler
 284              	.LVL9:
 285              	.L23:
 155:Core/Src/main.c ****   }
 286              		.loc 1 155 5 view .LVU65
 287 005c FFF7FEFF 		bl	Error_Handler
 288              	.LVL10:
 289              		.cfi_endproc
 290              	.LFE169:
 292              		.section	.text.main,"ax",%progbits
 293              		.align	1
 294              		.global	main
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 299              	main:
 300              	.LFB168:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 301              		.loc 1 69 1 view -0
 302              		.cfi_startproc
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 13


 303              		@ Volatile: function does not return.
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306 0000 08B5     		push	{r3, lr}
 307              	.LCFI5:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 3, -8
 310              		.cfi_offset 14, -4
  77:Core/Src/main.c **** 
 311              		.loc 1 77 3 view .LVU67
 312 0002 FFF7FEFF 		bl	HAL_Init
 313              	.LVL11:
  84:Core/Src/main.c **** 
 314              		.loc 1 84 3 view .LVU68
 315 0006 FFF7FEFF 		bl	SystemClock_Config
 316              	.LVL12:
  91:Core/Src/main.c ****   MX_CAN_Init();
 317              		.loc 1 91 3 view .LVU69
 318 000a FFF7FEFF 		bl	MX_GPIO_Init
 319              	.LVL13:
  92:Core/Src/main.c ****   MX_TIM2_Init();
 320              		.loc 1 92 3 view .LVU70
 321 000e FFF7FEFF 		bl	MX_CAN_Init
 322              	.LVL14:
  93:Core/Src/main.c ****   MX_TIM3_Init();
 323              		.loc 1 93 3 view .LVU71
 324 0012 FFF7FEFF 		bl	MX_TIM2_Init
 325              	.LVL15:
  94:Core/Src/main.c ****   MX_TIM17_Init();
 326              		.loc 1 94 3 view .LVU72
 327 0016 FFF7FEFF 		bl	MX_TIM3_Init
 328              	.LVL16:
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 329              		.loc 1 95 3 view .LVU73
 330 001a FFF7FEFF 		bl	MX_TIM17_Init
 331              	.LVL17:
  97:Core/Src/main.c ****   Flash_Read_Data(0x0800FFFC, NodeID, 1);
 332              		.loc 1 97 3 view .LVU74
 333 001e 0848     		ldr	r0, .L27
 334 0020 FFF7FEFF 		bl	HAL_TIM_Base_Start
 335              	.LVL18:
  98:Core/Src/main.c ****   HAL_FLASH_Lock();
 336              		.loc 1 98 3 view .LVU75
 337 0024 0122     		movs	r2, #1
 338 0026 0749     		ldr	r1, .L27+4
 339 0028 0748     		ldr	r0, .L27+8
 340 002a FFF7FEFF 		bl	Flash_Read_Data
 341              	.LVL19:
  99:Core/Src/main.c ****   /* USER CODE END 2 */
 342              		.loc 1 99 3 view .LVU76
 343 002e FFF7FEFF 		bl	HAL_FLASH_Lock
 344              	.LVL20:
 103:Core/Src/main.c ****   MX_FREERTOS_Init();
 345              		.loc 1 103 3 view .LVU77
 346 0032 FFF7FEFF 		bl	osKernelInitialize
 347              	.LVL21:
 104:Core/Src/main.c **** 
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 14


 348              		.loc 1 104 3 view .LVU78
 349 0036 FFF7FEFF 		bl	MX_FREERTOS_Init
 350              	.LVL22:
 107:Core/Src/main.c **** 
 351              		.loc 1 107 3 view .LVU79
 352 003a FFF7FEFF 		bl	osKernelStart
 353              	.LVL23:
 354              	.L25:
 112:Core/Src/main.c ****   {
 355              		.loc 1 112 3 discriminator 1 view .LVU80
 117:Core/Src/main.c ****   /* USER CODE END 3 */
 356              		.loc 1 117 3 discriminator 1 view .LVU81
 112:Core/Src/main.c ****   {
 357              		.loc 1 112 9 discriminator 1 view .LVU82
 358 003e FEE7     		b	.L25
 359              	.L28:
 360              		.align	2
 361              	.L27:
 362 0040 00000000 		.word	htim2
 363 0044 00000000 		.word	.LANCHOR0
 364 0048 FCFF0008 		.word	134283260
 365              		.cfi_endproc
 366              	.LFE168:
 368              		.global	NodeID
 369              		.section	.bss.NodeID,"aw",%nobits
 370              		.align	2
 371              		.set	.LANCHOR0,. + 0
 374              	NodeID:
 375 0000 00000000 		.space	4
 376              		.text
 377              	.Letext0:
 378              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 379              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 380              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 381              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 382              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 383              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 384              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 385              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 386              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 387              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 388              		.file 13 "Middlewares/Third_Party/CANopenNode_STM32/CO_driver_target.h"
 389              		.file 14 "Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h"
 390              		.file 15 "Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h"
 391              		.file 16 "Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.h"
 392              		.file 17 "Middlewares/Third_Party/CANopenNode/301/CO_HBconsumer.h"
 393              		.file 18 "Middlewares/Third_Party/CANopenNode/301/CO_SDOserver.h"
 394              		.file 19 "Middlewares/Third_Party/CANopenNode/301/CO_SYNC.h"
 395              		.file 20 "Middlewares/Third_Party/CANopenNode/301/CO_PDO.h"
 396              		.file 21 "Middlewares/Third_Party/CANopenNode/301/CO_TIME.h"
 397              		.file 22 "Middlewares/Third_Party/CANopenNode/303/CO_LEDs.h"
 398              		.file 23 "Middlewares/Third_Party/CANopenNode/305/CO_LSS.h"
 399              		.file 24 "Middlewares/Third_Party/CANopenNode/305/CO_LSSslave.h"
 400              		.file 25 "Middlewares/Third_Party/CANopenNode/CANopen.h"
 401              		.file 26 "Middlewares/Third_Party/CANopenNode_STM32/CO_app_STM32.h"
 402              		.file 27 "Core/Inc/tim.h"
 403              		.file 28 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 15


 404              		.file 29 "Core/Inc/gpio.h"
 405              		.file 30 "Core/Inc/can.h"
 406              		.file 31 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_flash.h"
 407              		.file 32 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 408              		.file 33 "<built-in>"
ARM GAS  C:\Users\walker\AppData\Local\Temp\cchP3VvA.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:20     .text.get_NodeID:00000000 $t
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:26     .text.get_NodeID:00000000 get_NodeID
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:42     .text.get_NodeID:00000008 $d
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:47     .text.delay_us:00000000 $t
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:53     .text.delay_us:00000000 delay_us
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:80     .text.delay_us:00000010 $d
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:85     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:91     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:141    .text.HAL_TIM_PeriodElapsedCallback:00000024 $d
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:147    .text.Error_Handler:00000000 $t
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:153    .text.Error_Handler:00000000 Error_Handler
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:185    .text.SystemClock_Config:00000000 $t
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:191    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:293    .text.main:00000000 $t
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:299    .text.main:00000000 main
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:362    .text.main:00000040 $d
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:374    .bss.NodeID:00000000 NodeID
C:\Users\walker\AppData\Local\Temp\cchP3VvA.s:370    .bss.NodeID:00000000 $d

UNDEFINED SYMBOLS
htim2
HAL_IncTick
canopen_app_interrupt
canopenNodeSTM32
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_CAN_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM17_Init
HAL_TIM_Base_Start
Flash_Read_Data
HAL_FLASH_Lock
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
